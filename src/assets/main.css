* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Radio Canada", sans-serif;
  /* user-select: none; */
}

*:not(input):not(textarea):not(button):not(select) {
  -webkit-touch-callout: none;
  /* iOS Safari */
  -webkit-user-select: none;
  /* Safari */
  -khtml-user-select: none;
  /* Konqueror HTML */
  -moz-user-select: none;
  /* Old versions of Firefox */
  -ms-user-select: none;
  /* Internet Explorer/Edge */
  user-select: none;
  /* Non-prefixed version, currently supported by Chrome, Edge, Opera and Firefox */
}

body {
  width: 100%;
  height: 100%;
  background-color: #f0f0f0;
  color: rgba(0, 0, 0, 0.80);
  font-size: 20px;
}

body.fa {
  background-color: #fafafa;
}

@media all and (min-width:1024px) {
  body {
    font-size: 18px;
  }
} 

/* 테블릿 가로, 테블릿 세로 (해상도 768px ~ 1023px)*/ 
@media all and (min-width:768px) and (max-width:1023px) {
  body {
    font-size: 16px;
  }
} 

/* 모바일 가로, 모바일 세로 (해상도 480px ~ 767px)*/ 
@media all and (max-width:767px) {
  body {
    font-size: 14px;
  }
}

input,
textarea {
  color: rgba(0, 0, 0, 0.8) !important;
}

input::placeholder,
textarea::placeholder {
  color: rgba(0, 0, 0, 0.4) !important;
  font-size: 1em !important;
}

.userSelect {
  user-select: text !important;
  cursor: text !important;
}

button {
  cursor: pointer;
}

/* error */
.material {
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  color: #F04E4E;
}

.material.error {
  padding-top: 16px;
}

.material span {
  margin-left: 6px;
}

/* password icon */
.passwordInput {
  position: relative;
}

.passwordInput .passwordIcon {
  position: absolute;
  right: 15px;
  bottom: 8px;
  opacity: 0.5;
  cursor: pointer;
}

/* material icon */
.material-symbols-outlined.big {
  font-variation-settings:
    'FILL' 1,
    'wght' 400,
    'GRAD' 0,
    'opsz' 32;
  font-size: 32px;
}

.material-symbols-outlined.mid {
  font-variation-settings:
    'FILL' 1,
    'wght' 400,
    'GRAD' 0,
    'opsz' 24;
  font-size: 24px;
}

.material-symbols-outlined.sml {
  font-variation-settings:
    'FILL' 1,
    'wght' 400,
    'GRAD' 0,
    'opsz' 20;
  font-size: 20px;
}

.material-symbols-outlined.empty {
  font-variation-settings:
    'FILL' 0,
    'wght' 400,
    'GRAD' 0,
    'opsz' 20;
}

.rotate_animation {
  animation: rotate_image 1.5s linear infinite;
}

/* loading img */
.loading {
  width: 24px;
  height: 24px;
  margin: 0 auto;
  animation: rotate_image 1.5s linear infinite;
  transform-origin: 50% 50%;
}

@keyframes rotate_image {
  100% {
    transform: rotate(360deg);
  }
}

input:focus {
  outline: none;
}

select:focus {
  outline: none;
}

/* select */
.customSelect {
  position: relative;
}

.customSelect select {
  width: 100%;
  border: 0;
  border-radius: 8px;
  appearance: none;
  cursor: pointer;
}

.customSelect .selectArrowDown {
  position: absolute;
  right: 13px;
  top: 50%;
  transform: translateY(-50%);
  border-radius: 0;
  user-select: none;
  /* z-index: -1; <- this makes the arrow dissappear in the records page */
  pointer-events: none;
}

/* checkBox */
.customCheckBox {
  margin-bottom: 0;
}

.customCheckBox input {
  display: none;
}

.customCheckBox label {
  position: relative;
  width: 16px;
  height: 16px;
  display: flex;
  align-items: center;
  flex-wrap: nowrap;
  color: rgba(0, 0, 0, 0.65);
  font-size: 16px;
  font-weight: 400;
  margin-bottom: 0;
}

.customCheckBox label::before {
  display: inline-block;
  position: absolute;
  content: "";
  /* left: 0; */
  /* top: 0; */
  /* left: 50%; */
  /* top: 50%; */
  /* transform: translate(-50%, -50%); */
  width: 16px;
  height: 16px;
  border: 2px solid #5f5f5f;
  background-color: #eee;
  border-radius: 4px;
}

.customCheckBox label span:not(.check) {
  margin-left: 28px;
}

.customCheckBox label .check {
  position: absolute;
  left: -2px;
  top: -3px;
  width: 20px;
  height: 20px;
  color: #fff;
  opacity: 0;
  cursor: pointer;
}

.customCheckBox input:checked+label::before {
  background-color: #5f5f5f;
}

.customCheckBox input:checked+label .check {
  opacity: 1;
}

.customCheckBox span {
  user-select: none;
}

form .error {
  margin-top: 16px;
  color: #F04E4E;
  font-size: 16px;
  font-weight: 400;
}

form .error svg {
  margin-right: 4px;
}

form .error span {
  vertical-align: middle;
}

/* clickable icon */
.clickable {
  cursor: pointer;
  color: rgba(0, 0, 0, 0.6);
}

.nonClickable {
  cursor: default !important;
  /* color: rgba(0, 0, 0, 0.3) !important; */
  opacity: 0.5 !important;
  pointer-events: none !important;
}

/* toggle button */
.toggleWrap {
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  opacity: 1;
}

.toggleWrap.locked {
  opacity: 0.4;
}

.toggleWrap.active .toggleBg {
  background-color: #293FE6;
}

.toggleWrap.active .toggleBg .toggleBtn {
  transform: translate(31px, -50%);
  transition: all 1s;
}

.toggleWrap span {
  margin-right: 20px;
  color: rgba(0, 0, 0, 0.40);
  font-size: 16px;
  font-weight: 500;
}

.toggleWrap .toggleBg {
  position: relative;
  width: 63px;
  height: 32px;
  border-radius: 16px;
  background-color: rgba(0, 0, 0, 0.25);
  transition: all 1s;
}

.toggleWrap .toggleBg .toggleBtn {
  position: absolute;
  width: 26px;
  height: 26px;
  right: unset;
  left: 3px;
  top: 50%;
  transform: translateY(-50%);
  border-radius: 50%;
  background-color: #eee;
  transition: all 1s;
  cursor: pointer;
}

.toggleWrap .toggleBg.nonClickable .toggleBtn {
  cursor: default;
}

.hoverWrap {
  position: relative;
}

.hoverWrap>*:nth-child(2) {
  /* text bubble initial style */
  position: absolute;
  display: none;
}

.hoverWrap>*:first-child:hover+* {
  /* text bubble hover style */
  display: block;
}

.hoverPreview {
  /* height: 44px; */
  background-color: #fafafa;
  border-radius: 8px;
  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.25);
  color: rgba(0, 0, 0, 0.60);
  font-size: 14px;
  /* padding: 0 12px; */
  padding: 15px 12px;
  font-weight: 700;

  bottom: 150%;
  /* white-space: nowrap; */
  left: var(--pos-l);
  right: var(--pos-r);
  align-items: center;
}

.hoverPreview::after {
  position: absolute;
  content: '';
  left: var(--arr-l);
  right: var(--arr-r);
  top: 50%;
  border-top: 20px solid transparent;
  border-right: 20px solid transparent;
  border-left: 20px solid #fafafa;
  rotate: -45deg;
}

.codeWrap {
    position: relative;
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.10);
    text-align: center;
    background: #434343;
    color: #FFF;
    padding: 7px 20px;
    box-shadow: 3px 9px 6px 0px rgba(0, 0, 0, 0.15);
    user-select: text !important;
}

.codeWrap .codeInner {
    white-space: nowrap;
    overflow: auto;
}

.codeWrap .line {
    display: inline-block;
    line-height: 1.4;
}

.codeWrap .copy {
    position: absolute;
    right: 28px;
    top: 50%;
    transform: translateY(-50%);
    color: #fff;
}

.codeWrap .copy::after {
    position: absolute;
    display: block;
    right: 30px;
    top: 50%;
    transform: translateY(-50%);
    text-align: center;
    font-size: 14px;
    font-weight: 400;
    background: rgba(255, 255, 255, 0.6);
    color: #343434;
    padding: 4px;
    content: "Copied";
    transition: opacity .4s;
    opacity: 0;
}

.codeWrap .copy.copied::after {
    opacity: 1;
}
